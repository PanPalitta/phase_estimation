# @configure_input@

# Package-related substitution variables
package	= @PACKAGE_NAME@
version	= @PACKAGE_VERSION@
tarname	= @PACKAGE_TARNAME@
distdir	= $(tarname)-$(version)

# Prefix-related substitution variables
prefix	 = @prefix@
exec_prefix    = @exec_prefix@
bindir	 = @bindir@
libdir	 = @libdir@

# Tool-related substitution variables
CXX		         = @CXX@
CXXFLAGS       = @CXXFLAGS@
LIBS	         = @LIBS@
DEFS           = @DEFS@
INSTALL	       = @INSTALL@
INSTALL_DATA   = @INSTALL_DATA@
INSTALL_PROGRAM= @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
MPI_INC        = @MPI_INC@
MPI_LIBDIR     = @MPI_LIBDIR@
MPI_LIBS       = @MPI_LIBS@
VSL_INC        = @VSL_INC@
VSL_LIBDIR     = @VSL_LIBDIR@
VSL_LIBS       = @VSL_LIBS@
CUDA_INC       = @CUDA_INC@
CUDA_CFLAGS    = @CUDA_CFLAGS@
CUDA_LIBS      = @CUDA_LIBS@
CUDA_LDFLAGS   = @CUDA_LDFLAGS@
NVCC       	   = @NVCC@

# VPATH-related substitution variables
srcdir	 = @srcdir@
VPATH	  = @srcdir@

OBJS=main.o candidate.o phase_loss_opt.o io.o problem.o mpi_optalg.o mpi_pso.o mpi_de.o candidate.o rng.o aux_functions.o

ifdef CUDA_LIBS
	OBJS+=rng_gpu.cu.co
else 
  ifdef VSL_LIBS
		OBJS+=rng_vsl.o
	endif
endif

all: phase_estimation
	
phase_estimation: $(OBJS)
	$(CXX) $(DEFS) $(CXXFLAGS) $(MPI_LIBDIR) $(VSL_LIBDIR) $(CUDA_LDFLAGS) -o $@ $^ $(LIBS) $(MPI_LIBS) $(VSL_LIBS) $(CUDA_LIBS)

%.o: %.cpp
		$(CXX) $(DEFS) $(CXXFLAGS) $(MPI_INC) $(CUDA_INC) $(VSL_INC) -I$(srcdir) -I.. -o $@ -c $(srcdir)/$<

%.cu.co: %.cu
		$(NVCC) $(DEFS) $(MPI_INC) $(CUDA_INC) $(CUDA_CFLAGS) -I$(srcdir) -I.. -o $@ -c $(srcdir)/$<

clean:
	-rm -f phase_estimation $(OBJS) 1>/dev/null

install:
	$(INSTALL) -d $(DESTDIR)$(bindir)
	$(INSTALL_PROGRAM) -m 0755 phase_estimation \
	 $(DESTDIR)$(bindir)
	 
uninstall:
	-rm $(DESTDIR)$(bindir)/phase_estimation &>/dev/null

Makefile: Makefile.in ../config.status
	cd .. && ./config.status $@

../config.status: ../configure
	cd .. && ./config.status --recheck

.PHONY: all clean install uninstall
